Prathyoosha Chaya
CS163: Data Structures

Program 1 – Design
Header Files:
Constructor: The purpose of the constructor function is to initialize the data members. This function will be public. Here, the linked list head is set to null to make an empty list, and the dynamic arrays title, topic, description, and source of the news is initialized.
Destructor: The destructor will deallocate all previously allocated dynamic memory, including the title, topic, description, and source. This function will be public.
Add news story: This function will allow the user to add a new news story. This public function will have the news struct passed by reference of the data to add, filled in by the user to prevent the data structure details from being seen by the client program. The function will return an integer value 1 if it has successfully added the new story, and a 0 if otherwise. There are 3 main cases to look for, if the list is empty (no news stories yet), if there is 1 news story, and if there are more than one news stories. If there are no news stories, then the head is set to a node containing the data to add, and the next pointer is set to null. If there is already one news story, then if the topic of interest is more relevant (topic of interest function is entered at the beginning of main func.) a temp node points to the existing node, and the topic-next points to it as well. If the topic is less important to the user, then the previous node’s topic-next pointer points to the new news story, and next is null. The same process is done for the time-next, where the timestamp is compared instead.
Update news story: The purpose of this public function is to update an existing news story. The function has no parameters, and returns an integer value of 1 if the story was successfully updated, and a 0 otherwise. The user will enter the corresponding number of the news story they would like to edit (number generated in accordance to the order or stories chronologically), and the section to change (title, description, source, etc.) checked against existing sections using the convert to uppercase function. The current section contents are displayed, and the user enters their changes to be written into the corresponding data member.
Set topic of interest: The purpose of this function is to allow the user to set the topic they would like to track their interest for. It is a public function with the “interested topic” variable as a parameter and integer return type. The user enters their topic, it goes through the convert to uppercase function and is compared to the existing topics, and it is written into a variable keeping track of the interest if it matches. If it does not match, the function returns a 0, and the main function runs the menu again, where the user can select the “set interest” option and try again.
Display all (time): The purpose of this function is to display all of the news stories, sorted by time. This public function has no parameters and an integer return type, and is implemented recursively. The base case is if the list is empty, where the function returns a 0. The contents are displayed and the function is called again with the pointer to the next node, until the end of the list is reached. If a story is marked as a favorite (in set favorite function), then it will appear with a marker to the user. I am not exactly sure about how to recursively implement this function without calling the pointer to a node as a parameter, because since this is an ADT no public functions should have a node in the linked list as a parameter.
Display recent: This public function displays the most recent stories, with a parameter for the user to enter the latest time stamp to have all displayed stories be. It returns an integer type to determine if the function has run successfully or not. It uses the time-next pointer to traverse and display the stories until the current node has a time that is later than the time stamp passed by the user.
Display interest: This public function uses the same methods as the display recent function, except it displays only the stories which are categorized as the user’s interest. It returns a 1 if run successfully, and a 0 if not. It uses the topic-next pointer to traverse and display stories until the next story has a topic that is different than the interest.
Remove older: This public function removes any stories that are older than that of the timestamp passed in by the user (as a parameter). It returns an integer of the number of items removed, and a 0 if none are removed. In the case of there being no stories older than the timestamp or the list being empty, the function returns 0 and exits. It traverses the list using the time-next pointer. If all of the stories are older than the timestamp, then the components and nodes will be deleted and head points to null. If the last nodes need to be deleted, then they are deleted (with all their components), and the last node that is within the timestamp points to null.
Favorite story: The purpose of this public function is to allow the user to identify their favorite story. The stories are displayed (using the display all function) with an archived number, then the user selects the number of the story they would like to favorite. This information will be stored in the data about each news story, under a Boolean variable. It will return 1 if a favorite is selected, and 0 if no favorite was selected or if the favorite selected is invalid. The “favorite topic” variable is passed into this function by reference to be altered by the function.

Implementation Files:
MAIN FUNCTION:
In the main function, a “menu option” variable (type int, to keep track of the menu item entered), a “interested topic” variable, and a “favorite topic” variable is created. First, the set topic function is entered. Then, the menu is outputted by calling the menu function. The user can choose which option they would like to execute from the following menu format:
1: Add a News Story
2: Update a news story
3: Set a topic of interest
4: Favorite a story
5: Remove older stories
6: Display all (chronologically)
7: Display recent
8: Display interested topic’s stories
9: Quit news.
The user will be prompted to enter a number, which is stored into the “menu option” variable once the function exits. The corresponding function will be called in main, and the user can continue to enter options when the menu options open after functions, until a 9 is entered and the program quits.

OTHER FUNCTIONS IN IMPLEMENTATION FILE:

Convert to uppercase function: The purpose of this function is to convert the inputted array of characters to uppercase, using the toupper functionality in the cctype library. It takes a source and destination array of characters as input parameters, and changes the contents of destination to be the uppercase version of the source array of characters, going character by character. This will be called in the update news function and set topic function.
Menu function: This function takes no parameters and returns an int value. It outputs the menu for the user to select, and return the user’s selection. The menu displayed is shown in the main function description.


